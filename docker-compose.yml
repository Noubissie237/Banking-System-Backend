<<<<<<< HEAD
version: "3.8"
services:
  service-config:
    build: ./service-config
    ports:
      - "8080:8080"
=======
services:
  # Service de configuration
  service-config:
    image: noubissie237/service-config:latest
    # build: ./service-config/
    ports:
      - "2370:2370"
>>>>>>> fd0a6e4972a24b6ff3ae230fd0fe6dfc1776bc0e
    environment:
      - SPRING_APPLICATION_NAME=service-config
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/Noubissie237/banking-system-cloud-conf
    networks:
<<<<<<< HEAD
      - microservices-network
        #8081 c'est la port pour acceder au service depuis l'exterieur or 8761 interne c' le port ou l'app va tourner

  service-registry:
    build: ./service-registry
    depends_on:
      - service-config
    environment:
      - SPRING_APPLICATION_NAME=service-registry
      - SPRING_CLOUD_CONFIG_URI=http://service-config:8080
      - SPRING_CONFIG_IMPORT=configserver:http://service-config:8080
    ports:
      - "8081:8761"
    networks:
      - microservices-network

  service-users:
    build: ./service-users
    depends_on:
      - service-config
      - service-registry
    environment:
      - SPRING_APPLICATION_NAME=service-users
      - SPRING_CLOUD_CONFIG_URI=http://service-config:8080
      - SPRING_CONFIG_IMPORT=configserver:http://service-config:8080
    ports:
      - "8083" #port interne car docker se charge d'allouer un port dynamquement aux instances lanc
    networks:
      - microservices-network

  service-proxy:
    build: ./service-proxy
    depends_on:
      - service-config
      - service-registry
    environment:
      - SPRING_APPLICATION_NAME=service-proxy
      - SPRING_CLOUD_CONFIG_URI=http://service-config:8080
      - SPRING_CONFIG_IMPORT=configserver:http://service-config:8080
    ports:
      - "8082:8079"
    networks:
      - microservices-network
  
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"  #port pour rabbitmq envoy les requet
      - "15672:15672" #port pour l'interface de gestion user
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge  
=======
      - banking-system-network

  # Service d'enrÃ©gistrement
  service-registry:
    image: noubissie237/service-registry:latest
    # build: ./service-registry/
    ports:
      - "8761:8761"
    environment:
      - SPRING_APPLICATION_NAME=service-registry
      - SPRING_CLOUD_CONFIG_URI=http://185.218.126.7:2370
      - SPRING_CONFIG_IMPORT=configserver:http://185.218.126.7:2370
    networks:
      - banking-system-network
    depends_on:
      - service-config

  # Service proxy
  service-proxy:
    image: noubissie237/service-proxy:latest
    # build: ./service-proxy/
    ports:
      - "8079:8079"
    environment:
      - SPRING_APPLICATION_NAME=service-proxy
      - SPRING_CLOUD_CONFIG_URI=http://185.218.126.7:2370
      - SPRING_CONFIG_IMPORT=configserver:http://185.218.126.7:2370
    networks:
      - banking-system-network
    depends_on:
      - service-config
      - service-registry
  

  # Service MySQL
  # mysql:
  #   image: mysql:latest
  #   environment:
  #     - MYSQL_ALLOW_EMPTY_PASSWORD=yes
  #     - MYSQL_ROOT_PASSWORD=
  #     - MYSQL_DATABASE=agence_bank
  #   ports:
  #     - "3307:3306"
  #   networks:
  #     - banking-system-network
  #   volumes:
  #     - mysql-data:/var/lib/mysql


  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - banking-system-network


  eventstore.db:
    image: docker.eventstore.com/eventstore-preview/eventstoredb-ee:24.10.0-preview1-x64-8.0-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_NODE_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
  mysql-data:

networks:
  banking-system-network:
    driver: bridge

>>>>>>> fd0a6e4972a24b6ff3ae230fd0fe6dfc1776bc0e
  